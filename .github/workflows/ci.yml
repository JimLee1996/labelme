name: ci

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        python-version: ['3.7']
        PYTEST_QT_API: [pyqt5]

    steps:
    - uses: actions/checkout@v2
      with:
        submodules: true

    - uses: goanpeca/setup-miniconda@v1
      with:
        auto-update-conda: true
        python-version: ${{ matrix.python-version }}

    - name: Install system dependencies
      shell: bash -l {0}
      run: |
        if [ "${{ matrix.os }}" = "ubuntu-latest" ]; then
          sudo apt-get install -y coreutils
          sudo apt-get install -y xvfb herbstluftwm
        elif [ "${{ matrix.os }}" = "macos-latest" ]; then
          brew install coreutils
          brew cask install xquartz
        fi

    - name: Set up Python
      shell: bash -l {0}
      run: |
        conda install -q -y python=${{ matrix.python-version }}
        which python
        python --version
        pip --version

    - name: Install dependencies
      shell: bash -l {0}
      run: |
        if [ "${{ matrix.PYTEST_QT_API }}" = "pyside2" ]; then
          if [ "${{ matrix.python-version }}" = "2.7" ]; then
            conda install -q -y 'pyside2!=5.12.4' -c conda-forge
          else
            conda install -q -y pyside2 -c conda-forge
          fi
        elif [ "${{ matrix.PYTEST_QT_API }}" = "pyqt4v2" ]; then
          conda install -q -y pyqt=4 -c conda-forge
        else  # pyqt5
          if [ "${{ matrix.os }}" = "macos-latest" -a "${{ matrix.python-version }}" = "3.7" ]; then
            pip install pyqt5
          else
            conda install -q -y pyqt=5
          fi
        fi
        if [ "${{ matrix.os }}" != "windows-latest" ]; then
          conda install -q -y help2man
        fi
        pip install hacking pytest pytest-qt

    - name: Install main
      shell: bash -l {0}
      run: |
        pip install .

    - name: Lint with flake8
      shell: bash -l {0}
      if: matrix.os != 'windows-latest'
      run: |
        flake8 .

    - name: Black
      shell: bash -l {0}
      if: matrix.os != 'windows-latest' && matrix.python-version != '2.7'
      run: |
        pip install black
        black --line-length 79 --check --diff labelme

    - name: Run pyinstaller
      shell: bash -l {0}
      if: matrix.PYTEST_QT_API == 'pyqt5' && matrix.python-version == '3.7'
      run: |
        # Build the standalone executable
        pip install pyinstaller
        pyinstaller labelme.spec
        dist/labelme --version
